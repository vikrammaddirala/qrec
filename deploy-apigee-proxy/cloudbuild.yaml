steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    id: variables
    entrypoint: 'bash'
    args:
      - -c
      - |
        export build_token="$(gcloud auth application-default print-access-token)"
        env | grep "^build_" > /workspace/build_vars

  - name: 'gcr.io/cloud-builders/curl'
    id: "Deploy Proxy Bundle"
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/build_vars
        echo "Deploying proxy from dev to dev-int in Apigee..."
        response=$(curl -s -X POST "https://apigee.googleapis.com/v1/organizations/${_APIGEE_PROJECT}/environments/${_APIGEE_UAT_ENV}/apis/helloworld-test/revisions/1/deployments" \
        -H "Authorization: Bearer ${build_token}")

        if echo "$response" | grep -q "404 Not Found"; then
          echo "404 Not Found: Deployment failed."
          exit 1
        else
          echo "Deployment successful."
        fi

  - name: 'gcr.io/cloud-builders/curl'
    id: "Test Proxy"
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/build_vars
        echo "Testing the deployed proxy..."
        proxy_response=$(curl -i -k --location 'https://34.18.29.48/mockAPI01/test' \
        --header 'Host: dev-api.qrec.gov.qa' \
        --header 'apiKey: YdxDVXsMaLuOox0gr3e1ANX7blLaCcGenKWUGux564xbu7OF' \
        --header 'Content-Type: application/json' \
        --header 'apiToken: haDabwMOsVRgUeUc8YuMSb3DvjQQ')

        response_code=$(echo "$proxy_response" | grep HTTP | awk '{print $2}')
        echo "Response code: $response_code"

        if [ "$response_code" != "404" ]; then
          echo "Proxy is working as expected."
        else
          echo "Proxy response is 404 Not Found."
          exit 1
        fi

        # If needed, check for expected response content
        # if echo "$proxy_response" | grep -q "expected_response"; then
        #   echo "Proxy is working as expected."
        # else
        #   echo "Proxy response is not as expected."
        #   exit 1
        # fi
