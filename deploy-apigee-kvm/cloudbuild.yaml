steps:
  # Step 1: Get an authentication token and store it in a file
  - name: 'gcr.io/cloud-builders/gcloud'
    id: variables
    entrypoint: 'bash'
    args:
      - -c
      - |
        export build_token="$(gcloud auth application-default print-access-token)"
        env | grep "^build_" > /workspace/build_vars

  # Step 2: Export the KVM from the dev environment
  - name: 'gcr.io/cloud-builders/curl'
    id: 'Export KVM'
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/build_vars
        echo "Exporting KVM from dev environment..."
        response=$(curl -s -w "%{http_code}" -o /workspace/kvm.json \
          -X GET "https://apigee.googleapis.com/v1/organizations/${_PROJECT_ID}/environments/dev/keyvaluemaps/${_KVM_NAME}" \
          -H "Authorization: Bearer ${build_token}")

        http_code=$(echo "$response" | tail -n1)
        if [ "$http_code" != "200" ]; then
          echo "Failed to export KVM. HTTP status code: $http_code"
          cat /workspace/kvm.json
          exit 1
        fi

  # Step 3: Import the KVM into the dev-int environment
  - name: 'gcr.io/cloud-builders/curl'
    id: 'Import KVM'
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/build_vars
        echo "Importing KVM into dev-int environment..."
        curl -X POST "https://apigee.googleapis.com/v1/organizations/${_PROJECT_ID}/environments/dev-int/keyvaluemaps" \
        -H "Authorization: Bearer ${build_token}" \
        -H "Content-Type: application/json" \
        -d @/workspace/kvm.json

substitutions:
  _PROJECT_ID: 'qrec-qa-apigee-nonprod'
  _KVM_NAME: 'apigee-internal-devops-01'
